Rna:matrix([cos(qa(t)),sin(qa(t)),0],[-sin(qa(t)),cos(qa(t)),0],[0,0,1]);
Rab:matrix([cos(qb(t)),0,-sin(qb(t))],[0,1,0],[sin(qb(t)),0,cos(qb(t))]);
Rbc1:matrix([1,0,0],[0,cos(qc1(t)),sin(qc1(t))],[0,-sin(qc1(t)),cos(qc1(t))]);
Rcd1:matrix([cos(qd1(t)),0,-sin(qd1(t))],[0,1,0],[sin(qd1(t)),0,cos(qd1(t))]);
Rbc2:matrix([1,0,0],[0,cos(qc2(t)),sin(qc2(t))],[0,-sin(qc2(t)),cos(qc2(t))]);
Rcd2:matrix([cos(qd2(t)),0,-sin(qd2(t))],[0,1,0],[sin(qd2(t)),0,cos(qd2(t))]);

wdn1:matrix([0],[diff(qd1(t),t)],[0]) + Rcd1.matrix([diff(qc1(t),t)],[0],[0]) + Rcd1.Rbc1.matrix([0],[diff(qb(t),t)],[0]) + Rcd1.Rbc1.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wcn1:                                        matrix([diff(qc1(t),t)],[0],[0]) +      Rbc1.matrix([0],[diff(qb(t),t)],[0]) +      Rbc1.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wdn2:matrix([0],[diff(qd2(t),t)],[0]) + Rcd2.matrix([diff(qc2(t),t)],[0],[0]) + Rcd2.Rbc2.matrix([0],[diff(qb(t),t)],[0]) + Rcd2.Rbc2.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wcn2:                                        matrix([diff(qc2(t),t)],[0],[0]) +      Rbc2.matrix([0],[diff(qb(t),t)],[0]) +      Rbc2.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wbn:                                                                                      matrix([0],[diff(qb(t),t)],[0]) +           Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wan:                                                                                                                                      Rna.matrix([0],[0],[diff(qa(t),t)]);

T:transpose(wdn1).matrix([Id,0,0],[0,Jd,0],[0,0,Id]).wdn1/2 + 
  transpose(wdn2).matrix([Id,0,0],[0,Jd,0],[0,0,Id]).wdn2/2 + 
  transpose(wcn1).matrix([Ic,0,0],[0,Jc,0],[0,0,Kc]).wcn1/2 + 
  transpose(wcn2).matrix([Ic,0,0],[0,Jc,0],[0,0,Kc]).wcn2/2 + 
  transpose(wbn).matrix([Ib,0,0],[0,Jb+m*l^2,0],[0,0,Kb]).wbn/2 + 
  transpose(wan).matrix([Ia,0,0],[0,Ja,0],[0,0,Ka]).wan/2$
P:m*g*l*cos(qb(t)+%pi/4)$
L:trigsimp(T-P);

E1:subst([diff(qd1(t),t,2)=0,diff(qd2(t),t,2)=0],trigsimp(diff(diff(L, diff(qa(t),t)),  t) - diff(L, qa(t))))$
E2:subst([diff(qd1(t),t,2)=0,diff(qd2(t),t,2)=0],trigsimp(diff(diff(L, diff(qb(t),t)),  t) - diff(L, qb(t))))$
E3:subst([diff(qd1(t),t,2)=0,diff(qd2(t),t,2)=0],trigsimp(diff(diff(L, diff(qc1(t),t)), t) - diff(L, qc1(t))))$
E4:subst([diff(qd1(t),t,2)=0,diff(qd2(t),t,2)=0],trigsimp(diff(diff(L, diff(qc2(t),t)), t) - diff(L, qc2(t))))$
EQs:subst([diff(qa(t),t,2)=dwa, diff(qb(t),t,2)=dwb, diff(qc1(t),t,2)=dwc1, diff(qc2(t),t,2)=dwc2, diff(qa(t),t)=wa, diff(qb(t),t)=wb, diff(qc1(t),t)=wc1, diff(qc2(t),t)=wc2, diff(qd1(t),t)=wd1, diff(qd2(t),t)=wd2, qa(t)=qa, qb(t)=qb, qc1(t)=qc1, qc2(t)=qc2], [E1, E2, E3, E4])$

dQ : transpose([wa, wb, wc1, wc2])$
M:jacobian(EQs, [dwa, dwb, dwc1, dwc2]);
h:radcan(transpose(EQs) - M.transpose([dwa, dwb, dwc1, dwc2]))$
C:radcan(jacobian(transpose(h)[1], transpose(dQ)[1]))/2;
G:radcan(h - C.dQ);

radcan(trigsimp(M.transpose([dwa,dwb,dwc1,dwc2]) + C.dQ + G - transpose(EQs)));

Tau:transpose([0,0,tau1,tau2])$
ddQ:radcan(radcan(trigsimp(invert(M))).(radcan(Tau - C.dQ - G)))$

f:[dQ[1][1], ddQ[1][1], dQ[2][1], ddQ[2][1], dQ[3][1], ddQ[3][1], dQ[4][1], ddQ[4][1]]$
f:subst([dQ[1][1]=x2, dQ[2][1]=x4, dQ[3][1]=x6, dQ[4][1]=x8], f)$
f:subst([qa=x1, qb=x3-%pi/4, qc1=x5+%pi/2, qc2=x7+%pi/2], f)$
f:radcan(trigsimp(f));

A:jacobian(f, [x1, x2, x3, x4, x5, x6, x7, x8])$
A:radcan(subst([x1=0, x2=0, x3=0, x4=0, x5=0, x6=0, x7=0, x8=0, tau1=0, tau2=0], A));

B:jacobian(f, [tau1, tau2])$
B:radcan(subst([x1=0, x2=0, x3=0, x4=0, x5=0, x6=0, x7=0, x8=0, tau1=0, tau2=0], B));

A:A/100;
substs:[wd1 = 223, wd2=-223, g = 9.81, m = 2.62, Ic = 0.001, Jc = 0.000260, Kc = 0.000987, Id = 0.000564, Jd = 0.0011, Kd = 0.000564, Ib = 2*0.01045, Jb = 2*0.01312, Kb = 2*0.01358, Ia = 2*0.01045, Ja = 2*0.01312, Ka = 2*0.01358, l = .1344]$
A:float(subst(substs, A));
B:float(subst(substs, B));


Co:matrix([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);
Co:transpose(Co)$
Co[1]:transpose(B)[1]$
Co[2]:transpose(B)[2]$
Co[3]:transpose(radcan(A.Co[1]))[1]$
Co[4]:transpose(radcan(A.Co[2]))[1]$
Co[5]:transpose(radcan(A.Co[3]))[1]$
Co[6]:transpose(radcan(A.Co[4]))[1]$
Co[7]:transpose(radcan(A.Co[5]))[1]$
Co[8]:transpose(radcan(A.Co[6]))[1]$
Co[9]:transpose(radcan(A.Co[7]))[1]$
Co[10]:transpose(radcan(A.Co[8]))[1]$
Co[11]:transpose(radcan(A.Co[9]))[1]$
Co[12]:transpose(radcan(A.Co[10]))[1]$
Co[13]:transpose(radcan(A.Co[11]))[1]$
Co[14]:transpose(radcan(A.Co[12]))[1]$
Co[15]:transpose(radcan(A.Co[13]))[1]$
Co[16]:transpose(radcan(A.Co[14]))[1]$
Co:(transpose(Co))$

substs:[g = 9.81, m = 2.62, Ic = 0.001, Jc = 0.000260, Kc = 0.000987, Id = 0.000564, Jd = 0.0011, Kd = 0.000564, Ib = 2*0.01045, Jb = 2*0.01312, Kb = 2*0.01358, Ia = 2*0.01045, Ja = 2*0.01312, Ka = 2*0.01358, l = .1344]$
Co:subst(substs, Co)$
rank(Co);

