Rna:matrix([cos(qa(t)),sin(qa(t)),0],[-sin(qa(t)),cos(qa(t)),0],[0,0,1]);
Rab:matrix([cos(qb(t)),0,-sin(qb(t))],[0,1,0],[sin(qb(t)),0,cos(qb(t))]);
Rbc:matrix([1,0,0],[0,cos(qc(t)),sin(qc(t))],[0,-sin(qc(t)),cos(qc(t))]);
Rcd:matrix([cos(qd(t)),0,-sin(qd(t))],[0,1,0],[sin(qd(t)),0,cos(qd(t))]);

wdn:matrix([0],[diff(qd(t),t)],[0]) + Rcd.matrix([diff(qc(t),t)],[0],[0]) + Rcd.Rbc.matrix([0],[diff(qb(t),t)],[0]) + Rcd.Rbc.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wcn:                           matrix([diff(qc(t),t)],[0],[0]) +     Rbc.matrix([0],[diff(qb(t),t)],[0]) +     Rbc.Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wbn:                                                          matrix([0],[diff(qb(t),t)],[0]) +         Rab.Rna.matrix([0],[0],[diff(qa(t),t)]);
wan:                                                                                             Rna.matrix([0],[0],[diff(qa(t),t)]);

T:transpose(wdn).matrix([Id,0,0],[0,Jd,0],[0,0,Id]).wdn/2 + transpose(wcn).matrix([Ic,0,0],[0,Jc,0],[0,0,Kc]).wcn/2 + transpose(wbn).matrix([Ib,0,0],[0,Jb+m*l^2,0],[0,0,Kb]).wbn/2 + transpose(wan).matrix([Ia,0,0],[0,Ja,0],[0,0,Ka]).wan/2;
P: m*g*l*cos(qb(t)+%pi/4);

L:trigsimp(T-P);
#,qa(t)=0,diff(qa(t),t)=0;

E1:subst(diff(qd(t),t,2)=0,trigsimp(diff(diff(L, diff(qa(t),t)), t)));
E2:subst(diff(qd(t),t,2)=0,trigsimp(diff(diff(L, diff(qb(t),t)), t)));
E3:subst(diff(qd(t),t,2)=0,trigsimp(diff(diff(L, diff(qc(t),t)), t)));
E4:trigsimp(diff(diff(L, diff(qd(t),t)), t));

M:jacobian([E1, E2, E3], [diff(qa(t),t,2), diff(qb(t),t,2), diff(qc(t),t,2)]);

H:radcan(transpose([E1, E2, E3]) - M.transpose([diff(qa(t),t,2), diff(qb(t),t,2), diff(qc(t),t,2)]));

C:radcan(jacobian(transpose(H)[1], [diff(qa(t),t), diff(qb(t),t), diff(qc(t),t)])/2);
G:H - C.transpose([diff(qa(t),t), diff(qb(t),t), diff(qc(t),t)]);

radcan(M.transpose([diff(qa(t),t,2), diff(qb(t),t,2), diff(qc(t),t,2)]) + C.transpose([diff(qa(t),t), diff(qb(t),t), diff(qc(t),t)]) + G - transpose([E1,E2,E3]));



